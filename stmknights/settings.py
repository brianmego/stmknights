"""
Django settings for stmknights project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', ')2(p03=_f@dr1hx_%dri2e4o&ntedsz*r6h1(7^)@4e#y0c3tj')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'true')
if DEBUG.lower() == 'false':
    DEBUG = False

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
if DEBUG:
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
else:
    BASE_DIR = '/var/www/html/stmknights'

ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', 'localhost').split(',')
if DEBUG:
    ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin.apps.SimpleAdminConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'adminplus',
    'campaigns',
]

try:
    import django_extensions
    INSTALLED_APPS.append(
        'django_extensions'
    )
except ImportError:
    # Not local dev
    pass


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stmknights.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stmknights.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

if not os.environ.get('DB_HOST'):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.{}'.format(os.environ['DB_TYPE']),
            'HOST': os.environ['DB_HOST'],
            'NAME': os.environ['DB_NAME'],
            'USER': os.environ['DB_USER'],
            'PASSWORD': os.environ['DB_PASSWORD'],
            'ATOMIC_REQUESTS': True
        }
    }


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = ''

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'static').replace('\\', '/')

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

LOG_PATH = os.environ.get('STMKNIGHTS_LOG_PATH')
LOG_LEVEL = os.environ.get('STMKNIGHTS_LOG_LEVEL', 'DEBUG')

if LOG_PATH:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        "formatters": {
            "simple": {
                "format": "%(asctime)s.%(msecs)03d %(name)-15s %(levelname)-8s %(message)s",
                "datefmt": "%Y-%m-%dT%H:%M:%S"
            },
        },
        'handlers': {
            'file': {
                'level': LOG_LEVEL,
                'formatter': 'simple',
                'class': 'logging.FileHandler',
                'filename': LOG_PATH,
            },
        },
        'loggers': {
            'django': {
                'handlers': ['file'],
                'level': LOG_LEVEL,
                'propagate': True,
            },
        },
    }

#Cardconnect variables
CARDCONNECT_BASE_URL = os.environ.get('CARDCONNECT_BASE_URL', '').rstrip('/')
CARDCONNECT_API_URL = f'{CARDCONNECT_BASE_URL}/cardconnect/rest'
CARDCONNECT_TOKEN_URL = f'{CARDCONNECT_BASE_URL}/itoke/ajax-tokenizer.html?useexpiry=true&usecvv=true'
CARDCONNECT_USERNAME = os.environ.get('CARDCONNECT_USERNAME')
CARDCONNECT_PASSWORD = os.environ.get('CARDCONNECT_PASSWORD')
CARDCONNECT_MERCHANT_ID = os.environ.get('CARDCONNECT_MERCHANT_ID')

# Sendgrid Email
EMAIL_BACKEND = "sgbackend.SendGridBackend"
SENDGRID_API_KEY = os.environ.get('SENDGRID_API_KEY')

# Recaptcha
RECAPTCHA_SITE_KEY = os.environ.get('RECAPTCHA_SITE_KEY')
RECAPTCHA_SECRET_KEY = os.environ.get('RECAPTCHA_SECRET_KEY')
